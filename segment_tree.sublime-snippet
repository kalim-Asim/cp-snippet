<snippet>
	<content><![CDATA[


const int N = 1e5;
int a[N], seg[4 * N];
void build(int ind, int lo int hi) {
    if (lo == hi) {
        seg[ind] = a[lo];
        return;
    }
    int mid = (lo + hi) / 2;
    build(2 * ind + 1, lo, mid);
    build(2 * ind + 2, mid + 1, hi);
    seg[ind] = max(seg[2 * ind + 1], seg[2 * ind + 2]);
}
// RANGE MAX QUERY
int query(int ind, int lo, int hi, int l, int r) {
    if (lo >= l and hi <= r) 
        return seg[ind];

    if (hi < l || lo > r) 
        return INT_MIN;

    int mid = (lo + hi) / 2;
    int left = query(2 * ind + 1, lo, mid, l, r);
    int right = query(2 * ind + 2, mid + 1, hi, l, r);
    return max(left, right);
}

int main() {
    int n; cin >> n;
    for (int i = 0; i < n; i++) cin >> a[i];

    build(0, 0, n - 1);
    int q; cin >> q;
    while(q--) {
        int l, r; cin >> l >> r;
        cout << query(0, 0, n - 1, l, r) << endl;
    }
}

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>segment_tree</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
